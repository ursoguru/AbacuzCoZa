@page "/PrimeRateMonthlyAverage"
@inject HttpClient Http
@using System;
@using System.Collections.Generic;
@using System.Xml.Linq;
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Threading;

<!--<PageTitle>Counter One</PageTitle>-->
<!--<h1>Counter PumpCalculater</h1>-->

<div class="container text-left">
    <div class="row">
        <div class="col-md-6">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">PRIME RATE STUFF</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <table class="table">

                                <tbody>
 
                                    <tr>
                                      
                                        <th>Select Year/Month </th>
                                        <td>
                                            <select class="form-control" value="@monthSelections.monthYear" @onchange="@OnSelectMonthYear" style="width:200px">
                                                @foreach (var monthYear in monthYears)
                                                {
                                                    <option value=@monthYear>@monthYear</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>

                                    
                                </tbody>
                            </table>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-6 text-left">
            <div class="d-none d-md-block">
                <div class="box"></div>

                <!-- <p role="status">Total: @currentCount</p> -->

            </div>
            <div>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Total Pump Duty:</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <table class="table">

                                    <tbody>

                                        <tr>
                                            <th>Total Required flow (m³/h)</th>
                                            <td>
                                                
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Total Dynamic Head (m)</th>
                                            <td>
                                                
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Model</th>
                            <th scope="col">380V</th>
                            <th scope="col">220V</th>
                            <th scope="col">kW</th>
                            <th scope="col">Pump</th>
                        </tr>
                    </thead>
                    <tbody>


                        

                    </tbody>
                </table>




            </div>


        </div>

    </div>
</div>



<!-- <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
    -->

@code {

    XDocument xDocument = new XDocument();
    // StreamReader streamReader = new StreamReader(@"bosterpumps.xml");
  
    String holdRaw = "empty";


    protected override async Task OnInitializedAsync()
    {
        await fetchXML();
        calculateAverage();
        // await base.OnInitializedAsync();
    }

    protected async Task fetchXML()
    {

        holdRaw = await Http.GetStringAsync("sample-data/bosterpumps.xml");

 
    }






    List<string> monthYears = new List<string>() { "2023 Jan", "2023 Feb", "2023 Mar", "2023 Apr"};

    




    struct MonthSelections
    {
        public int apartments;
        public int stories;
        public int sinks;
        public int dishwashers;
        public int washingmachines;
        public int showers;
        public int bathtubs;
        public int washbasins;
        public int bidets;
        public string toilet;
        public string pipe;
        public float pipewidth;
        public float pipelength;
        public string monthYear;


        public MonthSelections(int ten, int two, int one, int zero, string toiletSystem, string pipeSystem, float pipeW, float pipeL, string mYear)
        {
            apartments = ten;
            stories = two;
            sinks = two;
            dishwashers = one;
            washingmachines = one;
            showers = one;
            bathtubs = one;
            washbasins = two;
            bidets = zero;
            toilet = toiletSystem;
            pipe = pipeSystem;
            pipelength = pipeL;
            pipewidth = pipeW;
            monthYear = mYear;

        }
    }

   


 



    

    

    MonthSelections monthSelections = new MonthSelections(10, 2, 1, 0, "2 x Flush tank / Cistern", "Steel Pipe ( old )", 39.0F, 70.0F,"2023 Jan");
    //monthSelections.stories = 10;


    public void calculateAverage()
    {


 

        


    }



    void OnSelectMonthYear(ChangeEventArgs e)
    {

        monthSelections.monthYear = e.Value.ToString();
        calculateAverage();

    }


    }

